/*
 * generated by Xtext
 */
grammar InternalDataModel;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.opendavinci.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.opendavinci.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.opendavinci.services.DataModelGrammarAccess;

}

@parser::members {

 	private DataModelGrammarAccess grammarAccess;
 	
    public InternalDataModelParser(TokenStream input, DataModelGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected DataModelGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getModelAccess().getPackageDeclarationParserRuleCall_0()); 
    }
    this_PackageDeclaration_0=rulePackageDeclaration
    { 
        $current = $this_PackageDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getMessagesMessageParserRuleCall_1_0()); 
	    }
		lv_messages_1_0=ruleMessage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"messages",
        		lv_messages_1_0, 
        		"Message");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageDeclarationRule()); }
	 iv_rulePackageDeclaration=rulePackageDeclaration 
	 { $current=$iv_rulePackageDeclaration.current; } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPackageDeclarationAccess().getPackageDeclarationAction_0(),
            $current);
    }
)(	otherlv_1='package' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPackageDeclarationAccess().getPackageKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDeclarationAccess().getPackagePackageIdentifierParserRuleCall_1_1_0()); 
	    }
		lv_package_2_0=rulePackageIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
	        }
       		set(
       			$current, 
       			"package",
        		lv_package_2_0, 
        		"PackageIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPackageDeclarationAccess().getSemicolonKeyword_1_2());
    }
)?)
;





// Entry rule entryRulePackageIdentifier
entryRulePackageIdentifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageIdentifierRule()); } 
	 iv_rulePackageIdentifier=rulePackageIdentifier 
	 { $current=$iv_rulePackageIdentifier.current.getText(); }  
	 EOF 
;

// Rule PackageIdentifier
rulePackageIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getPackageIdentifierAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPackageIdentifierAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getPackageIdentifierAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleMessage
entryRuleMessage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMessageRule()); }
	 iv_ruleMessage=ruleMessage 
	 { $current=$iv_ruleMessage.current; } 
	 EOF 
;

// Rule Message
ruleMessage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='message' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMessageAccess().getMessageKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageAccess().getMessageMessageIdentifierParserRuleCall_1_0()); 
	    }
		lv_message_1_0=ruleMessageIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageRule());
	        }
       		set(
       			$current, 
       			"message",
        		lv_message_1_0, 
        		"MessageIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='extends' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMessageAccess().getExtendsKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageAccess().getSuperMessageMessageIdentifierParserRuleCall_2_1_0()); 
	    }
		lv_superMessage_3_0=ruleMessageIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageRule());
	        }
       		set(
       			$current, 
       			"superMessage",
        		lv_superMessage_3_0, 
        		"MessageIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMessageAccess().getLeftSquareBracketKeyword_3_0());
    }
	otherlv_5='id' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMessageAccess().getIdKeyword_3_1());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMessageAccess().getEqualsSignKeyword_3_2());
    }
(
(
		lv_id_7_0=RULE_NUMBER
		{
			newLeafNode(lv_id_7_0, grammarAccess.getMessageAccess().getIdNUMBERTerminalRuleCall_3_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMessageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_7_0, 
        		"NUMBER");
	    }

)
)	otherlv_8=']' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMessageAccess().getRightSquareBracketKeyword_3_4());
    }
)	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMessageAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageAccess().getAttributesAttributeParserRuleCall_5_0()); 
	    }
		lv_attributes_10_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_10_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMessageAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleMessageIdentifier
entryRuleMessageIdentifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMessageIdentifierRule()); } 
	 iv_ruleMessageIdentifier=ruleMessageIdentifier 
	 { $current=$iv_ruleMessageIdentifier.current.getText(); }  
	 EOF 
;

// Rule MessageIdentifier
ruleMessageIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getMessageIdentifierAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMessageIdentifierAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getMessageIdentifierAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleTypeIdentifier
entryRuleTypeIdentifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeIdentifierRule()); } 
	 iv_ruleTypeIdentifier=ruleTypeIdentifier 
	 { $current=$iv_ruleTypeIdentifier.current.getText(); }  
	 EOF 
;

// Rule TypeIdentifier
ruleTypeIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getTypeIdentifierAccess().getIDTerminalRuleCall_0()); 
    }
((
    { 
        newCompositeNode(grammarAccess.getTypeIdentifierAccess().getInternalTypeParserRuleCall_1_0()); 
    }
    this_InternalType_1=ruleInternalType    {
		$current.merge(this_InternalType_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*
    |(
    { 
        newCompositeNode(grammarAccess.getTypeIdentifierAccess().getExternalTypeParserRuleCall_1_1()); 
    }
    this_ExternalType_2=ruleExternalType    {
		$current.merge(this_ExternalType_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*))
    ;





// Entry rule entryRuleInternalType
entryRuleInternalType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getInternalTypeRule()); } 
	 iv_ruleInternalType=ruleInternalType 
	 { $current=$iv_ruleInternalType.current.getText(); }  
	 EOF 
;

// Rule InternalType
ruleInternalType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInternalTypeAccess().getFullStopKeyword_0()); 
    }
    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getInternalTypeAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleExternalType
entryRuleExternalType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExternalTypeRule()); } 
	 iv_ruleExternalType=ruleExternalType 
	 { $current=$iv_ruleExternalType.current.getText(); }  
	 EOF 
;

// Rule ExternalType
ruleExternalType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='::' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExternalTypeAccess().getColonColonKeyword_0()); 
    }
    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getExternalTypeAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getScalarScalarDeclarationParserRuleCall_0_0_0()); 
	    }
		lv_scalar_0_0=ruleScalarDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"scalar",
        		lv_scalar_0_0, 
        		"ScalarDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getListListDeclarationParserRuleCall_0_1_0()); 
	    }
		lv_list_1_0=ruleListDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_1_0, 
        		"ListDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getMapMapDeclarationParserRuleCall_0_2_0()); 
	    }
		lv_map_2_0=ruleMapDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"map",
        		lv_map_2_0, 
        		"MapDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getEnumdecEnumDeclarationParserRuleCall_0_3_0()); 
	    }
		lv_enumdec_3_0=ruleEnumDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"enumdec",
        		lv_enumdec_3_0, 
        		"EnumDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getFixedarrayFixedArrayDeclarationParserRuleCall_0_4_0()); 
	    }
		lv_fixedarray_4_0=ruleFixedArrayDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"fixedarray",
        		lv_fixedarray_4_0, 
        		"FixedArrayDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getConstConstDeclarationParserRuleCall_0_5_0()); 
	    }
		lv_const_5_0=ruleConstDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"const",
        		lv_const_5_0, 
        		"ConstDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAttributeAccess().getSemicolonKeyword_1());
    }
)
;





// Entry rule entryRuleScalarDeclaration
entryRuleScalarDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScalarDeclarationRule()); }
	 iv_ruleScalarDeclaration=ruleScalarDeclaration 
	 { $current=$iv_ruleScalarDeclaration.current; } 
	 EOF 
;

// Rule ScalarDeclaration
ruleScalarDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		{ 
	        newCompositeNode(grammarAccess.getScalarDeclarationAccess().getTypeTYPEParserRuleCall_0_0_0()); 
	    }
		lv_type_0_1=ruleTYPE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScalarDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_1, 
        		"TYPE");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getScalarDeclarationAccess().getTypeTypeIdentifierParserRuleCall_0_0_1()); 
	    }
		lv_type_0_2=ruleTypeIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScalarDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_2, 
        		"TypeIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(
(
		lv_isPointer_1_0=	'*' 
    {
        newLeafNode(lv_isPointer_1_0, grammarAccess.getScalarDeclarationAccess().getIsPointerAsteriskKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScalarDeclarationRule());
	        }
       		setWithLastConsumed($current, "isPointer", lv_isPointer_1_0, "*");
	    }

)
)?(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getScalarDeclarationAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScalarDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getScalarDeclarationAccess().getLeftSquareBracketKeyword_3_0());
    }
(	otherlv_4='default' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getScalarDeclarationAccess().getDefaultKeyword_3_1_0());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getScalarDeclarationAccess().getEqualsSignKeyword_3_1_1());
    }
(
(
(
		lv_value_6_1=RULE_BOOL
		{
			newLeafNode(lv_value_6_1, grammarAccess.getScalarDeclarationAccess().getValueBOOLTerminalRuleCall_3_1_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScalarDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_6_1, 
        		"BOOL");
	    }

    |		lv_value_6_2=RULE_NUMBER
		{
			newLeafNode(lv_value_6_2, grammarAccess.getScalarDeclarationAccess().getValueNUMBERTerminalRuleCall_3_1_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScalarDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_6_2, 
        		"NUMBER");
	    }

    |		lv_value_6_3=RULE_STRING
		{
			newLeafNode(lv_value_6_3, grammarAccess.getScalarDeclarationAccess().getValueSTRINGTerminalRuleCall_3_1_2_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScalarDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_6_3, 
        		"STRING");
	    }

    |		lv_value_6_4=RULE_ID
		{
			newLeafNode(lv_value_6_4, grammarAccess.getScalarDeclarationAccess().getValueIDTerminalRuleCall_3_1_2_0_3()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScalarDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_6_4, 
        		"ID");
	    }

)

)
))?(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getScalarDeclarationAccess().getCommaKeyword_3_2());
    }
)?(	otherlv_8='id' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getScalarDeclarationAccess().getIdKeyword_3_3_0());
    }
	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getScalarDeclarationAccess().getEqualsSignKeyword_3_3_1());
    }
(
(
		lv_id_10_0=RULE_NUMBER
		{
			newLeafNode(lv_id_10_0, grammarAccess.getScalarDeclarationAccess().getIdNUMBERTerminalRuleCall_3_3_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScalarDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_10_0, 
        		"NUMBER");
	    }

)
))?(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getScalarDeclarationAccess().getCommaKeyword_3_4());
    }
)?(	otherlv_12='fourbyteid' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getScalarDeclarationAccess().getFourbyteidKeyword_3_5_0());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getScalarDeclarationAccess().getEqualsSignKeyword_3_5_1());
    }
(
(
(
		lv_fourbyteid_14_1=RULE_NUMBER
		{
			newLeafNode(lv_fourbyteid_14_1, grammarAccess.getScalarDeclarationAccess().getFourbyteidNUMBERTerminalRuleCall_3_5_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScalarDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fourbyteid",
        		lv_fourbyteid_14_1, 
        		"NUMBER");
	    }

    |		lv_fourbyteid_14_2=RULE_HEXNUMBER
		{
			newLeafNode(lv_fourbyteid_14_2, grammarAccess.getScalarDeclarationAccess().getFourbyteidHEXNUMBERTerminalRuleCall_3_5_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScalarDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fourbyteid",
        		lv_fourbyteid_14_2, 
        		"HEXNUMBER");
	    }

)

)
))?	otherlv_15=']' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getScalarDeclarationAccess().getRightSquareBracketKeyword_3_6());
    }
)?)
;





// Entry rule entryRuleListDeclaration
entryRuleListDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListDeclarationRule()); }
	 iv_ruleListDeclaration=ruleListDeclaration 
	 { $current=$iv_ruleListDeclaration.current; } 
	 EOF 
;

// Rule ListDeclaration
ruleListDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_modifier_0_0=	'list' 
    {
        newLeafNode(lv_modifier_0_0, grammarAccess.getListDeclarationAccess().getModifierListKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getListDeclarationRule());
	        }
       		setWithLastConsumed($current, "modifier", lv_modifier_0_0, "list");
	    }

)
)	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getListDeclarationAccess().getLessThanSignKeyword_1());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getListDeclarationAccess().getTypeTYPEParserRuleCall_2_0_0()); 
	    }
		lv_type_2_1=ruleTYPE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_1, 
        		"TYPE");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getListDeclarationAccess().getTypeTypeIdentifierParserRuleCall_2_0_1()); 
	    }
		lv_type_2_2=ruleTypeIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_2, 
        		"TypeIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)

)
)	otherlv_3='>' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getListDeclarationAccess().getGreaterThanSignKeyword_3());
    }
(
(
		lv_name_4_0=RULE_ID
		{
			newLeafNode(lv_name_4_0, grammarAccess.getListDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getListDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"ID");
	    }

)
)(	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getListDeclarationAccess().getLeftSquareBracketKeyword_5_0());
    }
(	otherlv_6='id' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getListDeclarationAccess().getIdKeyword_5_1_0());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getListDeclarationAccess().getEqualsSignKeyword_5_1_1());
    }
(
(
		lv_id_8_0=RULE_NUMBER
		{
			newLeafNode(lv_id_8_0, grammarAccess.getListDeclarationAccess().getIdNUMBERTerminalRuleCall_5_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getListDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_8_0, 
        		"NUMBER");
	    }

)
))?(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getListDeclarationAccess().getCommaKeyword_5_2());
    }
)?(	otherlv_10='fourbyteid' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getListDeclarationAccess().getFourbyteidKeyword_5_3_0());
    }
	otherlv_11='=' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getListDeclarationAccess().getEqualsSignKeyword_5_3_1());
    }
(
(
(
		lv_fourbyteid_12_1=RULE_NUMBER
		{
			newLeafNode(lv_fourbyteid_12_1, grammarAccess.getListDeclarationAccess().getFourbyteidNUMBERTerminalRuleCall_5_3_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getListDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fourbyteid",
        		lv_fourbyteid_12_1, 
        		"NUMBER");
	    }

    |		lv_fourbyteid_12_2=RULE_HEXNUMBER
		{
			newLeafNode(lv_fourbyteid_12_2, grammarAccess.getListDeclarationAccess().getFourbyteidHEXNUMBERTerminalRuleCall_5_3_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getListDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fourbyteid",
        		lv_fourbyteid_12_2, 
        		"HEXNUMBER");
	    }

)

)
))?	otherlv_13=']' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getListDeclarationAccess().getRightSquareBracketKeyword_5_4());
    }
)?)
;





// Entry rule entryRuleMapDeclaration
entryRuleMapDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMapDeclarationRule()); }
	 iv_ruleMapDeclaration=ruleMapDeclaration 
	 { $current=$iv_ruleMapDeclaration.current; } 
	 EOF 
;

// Rule MapDeclaration
ruleMapDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_modifier_0_0=	'map' 
    {
        newLeafNode(lv_modifier_0_0, grammarAccess.getMapDeclarationAccess().getModifierMapKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapDeclarationRule());
	        }
       		setWithLastConsumed($current, "modifier", lv_modifier_0_0, "map");
	    }

)
)	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMapDeclarationAccess().getLessThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMapDeclarationAccess().getPrimaryTypeTYPEParserRuleCall_2_0()); 
	    }
		lv_primaryType_2_0=ruleTYPE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapDeclarationRule());
	        }
       		set(
       			$current, 
       			"primaryType",
        		lv_primaryType_2_0, 
        		"TYPE");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMapDeclarationAccess().getCommaKeyword_3());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getMapDeclarationAccess().getSecondaryTypeTYPEParserRuleCall_4_0_0()); 
	    }
		lv_secondaryType_4_1=ruleTYPE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapDeclarationRule());
	        }
       		set(
       			$current, 
       			"secondaryType",
        		lv_secondaryType_4_1, 
        		"TYPE");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getMapDeclarationAccess().getSecondaryTypeTypeIdentifierParserRuleCall_4_0_1()); 
	    }
		lv_secondaryType_4_2=ruleTypeIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapDeclarationRule());
	        }
       		set(
       			$current, 
       			"secondaryType",
        		lv_secondaryType_4_2, 
        		"TypeIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)

)
)	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMapDeclarationAccess().getGreaterThanSignKeyword_5());
    }
(
(
		lv_name_6_0=RULE_ID
		{
			newLeafNode(lv_name_6_0, grammarAccess.getMapDeclarationAccess().getNameIDTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"ID");
	    }

)
)(	otherlv_7='[' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMapDeclarationAccess().getLeftSquareBracketKeyword_7_0());
    }
(	otherlv_8='id' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMapDeclarationAccess().getIdKeyword_7_1_0());
    }
	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMapDeclarationAccess().getEqualsSignKeyword_7_1_1());
    }
(
(
		lv_id_10_0=RULE_NUMBER
		{
			newLeafNode(lv_id_10_0, grammarAccess.getMapDeclarationAccess().getIdNUMBERTerminalRuleCall_7_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_10_0, 
        		"NUMBER");
	    }

)
))?(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMapDeclarationAccess().getCommaKeyword_7_2());
    }
)?(	otherlv_12='fourbyteid' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getMapDeclarationAccess().getFourbyteidKeyword_7_3_0());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getMapDeclarationAccess().getEqualsSignKeyword_7_3_1());
    }
(
(
(
		lv_fourbyteid_14_1=RULE_NUMBER
		{
			newLeafNode(lv_fourbyteid_14_1, grammarAccess.getMapDeclarationAccess().getFourbyteidNUMBERTerminalRuleCall_7_3_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fourbyteid",
        		lv_fourbyteid_14_1, 
        		"NUMBER");
	    }

    |		lv_fourbyteid_14_2=RULE_HEXNUMBER
		{
			newLeafNode(lv_fourbyteid_14_2, grammarAccess.getMapDeclarationAccess().getFourbyteidHEXNUMBERTerminalRuleCall_7_3_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fourbyteid",
        		lv_fourbyteid_14_2, 
        		"HEXNUMBER");
	    }

)

)
))?	otherlv_15=']' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getMapDeclarationAccess().getRightSquareBracketKeyword_7_4());
    }
)?)
;





// Entry rule entryRuleEnumDeclaration
entryRuleEnumDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumDeclarationRule()); }
	 iv_ruleEnumDeclaration=ruleEnumDeclaration 
	 { $current=$iv_ruleEnumDeclaration.current; } 
	 EOF 
;

// Rule EnumDeclaration
ruleEnumDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_modifier_0_0=	'enum' 
    {
        newLeafNode(lv_modifier_0_0, grammarAccess.getEnumDeclarationAccess().getModifierEnumKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumDeclarationRule());
	        }
       		setWithLastConsumed($current, "modifier", lv_modifier_0_0, "enum");
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEnumDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumDeclarationAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumDeclarationAccess().getEnumeratorsEnumEntryParserRuleCall_3_0()); 
	    }
		lv_enumerators_3_0=ruleEnumEntry		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
	        }
       		add(
       			$current, 
       			"enumerators",
        		lv_enumerators_3_0, 
        		"EnumEntry");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumDeclarationAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleEnumEntry
entryRuleEnumEntry returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumEntryRule()); }
	 iv_ruleEnumEntry=ruleEnumEntry 
	 { $current=$iv_ruleEnumEntry.current; } 
	 EOF 
;

// Rule EnumEntry
ruleEnumEntry returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_enum_name_0_0=RULE_ID
		{
			newLeafNode(lv_enum_name_0_0, grammarAccess.getEnumEntryAccess().getEnum_nameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumEntryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"enum_name",
        		lv_enum_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumEntryAccess().getEqualsSignKeyword_1());
    }
(
(
		lv_enum_value_2_0=RULE_NUMBER
		{
			newLeafNode(lv_enum_value_2_0, grammarAccess.getEnumEntryAccess().getEnum_valueNUMBERTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumEntryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"enum_value",
        		lv_enum_value_2_0, 
        		"NUMBER");
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEnumEntryAccess().getCommaKeyword_3());
    }
)
;





// Entry rule entryRuleFixedArrayDeclaration
entryRuleFixedArrayDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFixedArrayDeclarationRule()); }
	 iv_ruleFixedArrayDeclaration=ruleFixedArrayDeclaration 
	 { $current=$iv_ruleFixedArrayDeclaration.current; } 
	 EOF 
;

// Rule FixedArrayDeclaration
ruleFixedArrayDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		{ 
	        newCompositeNode(grammarAccess.getFixedArrayDeclarationAccess().getTypeTYPEParserRuleCall_0_0_0()); 
	    }
		lv_type_0_1=ruleTYPE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFixedArrayDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_1, 
        		"TYPE");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getFixedArrayDeclarationAccess().getTypeTypeIdentifierParserRuleCall_0_0_1()); 
	    }
		lv_type_0_2=ruleTypeIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFixedArrayDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_2, 
        		"TypeIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFixedArrayDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFixedArrayDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFixedArrayDeclarationAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		lv_size_3_0=RULE_NUMBER
		{
			newLeafNode(lv_size_3_0, grammarAccess.getFixedArrayDeclarationAccess().getSizeNUMBERTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFixedArrayDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"size",
        		lv_size_3_0, 
        		"NUMBER");
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFixedArrayDeclarationAccess().getRightSquareBracketKeyword_4());
    }
(	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFixedArrayDeclarationAccess().getLeftSquareBracketKeyword_5_0());
    }
(	otherlv_6='id' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFixedArrayDeclarationAccess().getIdKeyword_5_1_0());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFixedArrayDeclarationAccess().getEqualsSignKeyword_5_1_1());
    }
(
(
		lv_id_8_0=RULE_NUMBER
		{
			newLeafNode(lv_id_8_0, grammarAccess.getFixedArrayDeclarationAccess().getIdNUMBERTerminalRuleCall_5_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFixedArrayDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_8_0, 
        		"NUMBER");
	    }

)
))?(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFixedArrayDeclarationAccess().getCommaKeyword_5_2());
    }
)?(	otherlv_10='fourbyteid' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getFixedArrayDeclarationAccess().getFourbyteidKeyword_5_3_0());
    }
	otherlv_11='=' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFixedArrayDeclarationAccess().getEqualsSignKeyword_5_3_1());
    }
(
(
(
		lv_fourbyteid_12_1=RULE_NUMBER
		{
			newLeafNode(lv_fourbyteid_12_1, grammarAccess.getFixedArrayDeclarationAccess().getFourbyteidNUMBERTerminalRuleCall_5_3_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFixedArrayDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fourbyteid",
        		lv_fourbyteid_12_1, 
        		"NUMBER");
	    }

    |		lv_fourbyteid_12_2=RULE_HEXNUMBER
		{
			newLeafNode(lv_fourbyteid_12_2, grammarAccess.getFixedArrayDeclarationAccess().getFourbyteidHEXNUMBERTerminalRuleCall_5_3_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFixedArrayDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fourbyteid",
        		lv_fourbyteid_12_2, 
        		"HEXNUMBER");
	    }

)

)
))?	otherlv_13=']' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFixedArrayDeclarationAccess().getRightSquareBracketKeyword_5_4());
    }
)?)
;





// Entry rule entryRuleConstDeclaration
entryRuleConstDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstDeclarationRule()); }
	 iv_ruleConstDeclaration=ruleConstDeclaration 
	 { $current=$iv_ruleConstDeclaration.current; } 
	 EOF 
;

// Rule ConstDeclaration
ruleConstDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='const' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstDeclarationAccess().getConstKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstDeclarationAccess().getTypeTYPEParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleTYPE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"TYPE");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getConstDeclarationAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConstDeclarationAccess().getEqualsSignKeyword_3());
    }
(
(
(
		lv_value_4_1=RULE_BOOL
		{
			newLeafNode(lv_value_4_1, grammarAccess.getConstDeclarationAccess().getValueBOOLTerminalRuleCall_4_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_4_1, 
        		"BOOL");
	    }

    |		lv_value_4_2=RULE_NUMBER
		{
			newLeafNode(lv_value_4_2, grammarAccess.getConstDeclarationAccess().getValueNUMBERTerminalRuleCall_4_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_4_2, 
        		"NUMBER");
	    }

    |		lv_value_4_3=RULE_STRING
		{
			newLeafNode(lv_value_4_3, grammarAccess.getConstDeclarationAccess().getValueSTRINGTerminalRuleCall_4_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_4_3, 
        		"STRING");
	    }

)

)
))
;





// Entry rule entryRuleTYPE
entryRuleTYPE returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTYPERule()); } 
	 iv_ruleTYPE=ruleTYPE 
	 { $current=$iv_ruleTYPE.current.getText(); }  
	 EOF 
;

// Rule TYPE
ruleTYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='bool' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTYPEAccess().getBoolKeyword_0()); 
    }

    |
	kw='char' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTYPEAccess().getCharKeyword_1()); 
    }

    |
	kw='int8' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTYPEAccess().getInt8Keyword_2()); 
    }

    |
	kw='uint8' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTYPEAccess().getUint8Keyword_3()); 
    }

    |
	kw='int16' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTYPEAccess().getInt16Keyword_4()); 
    }

    |
	kw='uint16' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTYPEAccess().getUint16Keyword_5()); 
    }

    |
	kw='int32' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTYPEAccess().getInt32Keyword_6()); 
    }

    |
	kw='uint32' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTYPEAccess().getUint32Keyword_7()); 
    }

    |
	kw='float' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTYPEAccess().getFloatKeyword_8()); 
    }

    |
	kw='double' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTYPEAccess().getDoubleKeyword_9()); 
    }

    |
	kw='string' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTYPEAccess().getStringKeyword_10()); 
    }
)
    ;





RULE_BOOL : ('true'|'false');

fragment RULE_SIGN : ('+'|'-');

fragment RULE_DIGIT : '0'..'9';

fragment RULE_HEXDIGIT : ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9'|'a'|'b'|'c'|'d'|'e'|'f'|'A'|'B'|'C'|'D'|'E'|'F');

RULE_NUMBER : RULE_SIGN? RULE_DIGIT+ ('.' RULE_DIGIT+)?;

RULE_HEXNUMBER : '0x' RULE_HEXDIGIT+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


